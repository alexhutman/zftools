name: Build, Test, Lint
env:
  SHA: ${{ github.event.pull_request.head.sha || github.sha }}
  CODE_DIR: /home/sage/zftools
  COMPILE_WAVEFRONT: true
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  dedupe:
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: Sanity checks
        run: |
            echo "ref/sha = ${{ github.head_ref || github.ref_name }}/${{ github.event.pull_request.head.sha || github.sha }}"
      - id: skip_check
        name: Check for duplicate jobs
        uses: fkirc/skip-duplicate-actions@v5.3.1
        with:
          concurrent_skipping: 'same_content_newer'
          paths_ignore: '["**/README.md", "**/docs/**"]'
  build:
    needs: dedupe
    runs-on: ubuntu-latest
    if: needs.dedupe.outputs.should_skip != 'true'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.7
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.6.1
    - name: Build and push the zftools Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        tags: zftools:${{env.SHA}}
        outputs: type=docker,dest=/tmp/zftools-${{env.SHA}}.tar
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: zftools-${{env.SHA}}
        path: /tmp/zftools-${{env.SHA}}.tar
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: zftools-${{env.SHA}}
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/zftools-${{env.SHA}}.tar
      - name: Run Docker image
        run: |
            echo "CONTAINER_ID=$(docker run -dt --entrypoint=/bin/sh zftools:${SHA})" >> $GITHUB_ENV
      - name: Build wavefront code
        run: |
            docker exec -e COMPILE_WAVEFRONT=true --workdir "${CODE_DIR}" "${CONTAINER_ID}" sage --python3 -m build --no-isolation
      - name: Install wavefront code + test dependencies
        run: |
            docker exec -e COMPILE_WAVEFRONT=true --workdir "${CODE_DIR}" "${CONTAINER_ID}" sage -pip install --no-cache-dir '.[test]'
      - name: Test zftools code
        run: |
            docker exec --workdir "${CODE_DIR}" "${CONTAINER_ID}" sage --python3 -m pytest --profile
  lint:
    needs: build
    runs-on:
      - ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: zftools-${{env.SHA}}
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/zftools-${{env.SHA}}.tar
      - name: Run Docker image
        run: |
            echo "CONTAINER_ID=$(docker run -d zftools:${SHA})" >> $GITHUB_ENV
      - name: Install lint requirements
        run: |
            docker exec --workdir "${CODE_DIR}" "${CONTAINER_ID}" sage -pip install --no-cache-dir '.[lint]'
      - name: Start Sage shell to find lint dep. executables & Lint Cython code
        run: |
            docker exec --workdir "${CODE_DIR}" "${CONTAINER_ID}" sage --sh -c 'find src -type f \( -iname \*.pyx -o -iname \*.pxd \) | xargs cython-lint'
